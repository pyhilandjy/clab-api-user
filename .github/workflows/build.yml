name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BRANCH_NAME: ${{ github.ref_name }}
  TAG_NAME: ${{ github.ref_name }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      - name: Set version
        id: version
        run: echo "version_tag=${{ env.BRANCH_NAME }}-${{ steps.vars.outputs.sha_short }}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}-${{ steps.vars.outputs.sha_short }}
          labels: ${{ steps.meta.outputs.labels }}
          env: ENV=${{ env.BRANCH_NAME == 'dev' && 'dev' || 'prod' }} VERSION=${{ steps.meta.outputs.tags }}-${{ steps.vars.outputs.sha_short }}

      # - name: Deploy to EC2
      #   env:
      #     EC2_HOST: ${{ secrets.EC2_HOST }}
      #     EC2_USER: ubuntu
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #   run: |
      #     echo "${SSH_PRIVATE_KEY}" > SSH_PRIVATE_KEY.pem
      #     chmod 600 SSH_PRIVATE_KEY.pem
      #     ssh -i SSH_PRIVATE_KEY.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST 'bash /home/ubuntu/deploy.sh'
